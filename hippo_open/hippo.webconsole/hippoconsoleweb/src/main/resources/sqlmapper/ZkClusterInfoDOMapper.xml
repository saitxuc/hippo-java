<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ZkClusterBackUpInfoDo">
	<resultMap type="ZkClusterBackUpInfoDo" id="zkClusterBackUpInfoDoMap">
		<id column="id" property="id" />
		<result column="clusterName" property="clusterName" />
		<result column="createDate" property="createDate" />
		<result column="config" property="config" />
		<result column="migration" property="migration" />
		<result column="df" property="df" />
		<result column="version" property="version" />
	</resultMap>

	<!-- select list -->
    <select id="selectBackUpList" resultType="ZkClusterBackUpInfoDo" parameterType="Map">
    	select id,clusterName,version,createDate,df,migration,config from hippo_zk_cluster
    	where df = #{df}
    	
    	<if test="clusterName !=null and clusterName !=''">
    		and clusterName = #{clusterName}
    	</if>
    	
    	<if test="version !=null and version !='' and version > 0" >
    		and version = #{version}
    	</if>
    	
    	order by version desc 
    	
    	<if test="rows !=null and rows !=''">
    		limit #{offset}, #{rows}
    	</if>
    	
    </select>
    
    <select id="loadBackupVersion" resultType="int" parameterType="ZkClusterBackUpInfoDo">
    	select IF(max(version) IS NULL,0,max(version)) from hippo_zk_cluster where clusterName = #{clusterName} and df = #{df}
    </select>
    
    <!-- insert -->
    <insert id="insertBackUpList" parameterType="ZkClusterBackUpInfoDo" useGeneratedKeys="true" keyProperty="id">
    	insert into hippo_zk_cluster (clusterName,version,createDate,df,migration,config ) 
    	values 
    	(#{clusterName},#{version},now(),#{df},#{migration},#{config} )
    </insert>
    
    <!-- select one  -->
    <select id="selectOneBackUp" parameterType="ZkClusterBackUpInfoDo" resultType="ZkClusterBackUpInfoDo">
    	select id,clusterName,version,createDate,df,migration,config  from hippo_zk_cluster
    	where 
    	id = #{id}
    </select>
    
    <!-- select count -->
    <select id="selectBackUpCount" parameterType="ZkClusterBackUpInfoDo" resultType="int">
    	select count(*) from hippo_zk_cluster where df = #{df}
    
    	<if test="clusterName !=null and clusterName !=''">
    		and clusterName = #{clusterName}
    	</if>
    	
    	<if test="version !=null and version !='' and version > 0" >
    		and version = #{version}
    	</if>
    </select>
    
    <!-- delete -->
    <update id="deleteBackUp" parameterType="ZkClusterBackUpInfoDo">
    	update hippo_zk_cluster set  df = #{df} where id = #{id}
    </update>
    
    
    <!-- update -->
    <update id="updateBackUpList" parameterType="ZkClusterBackUpInfoDo">
    	update hippo_zk_cluster set 
    	<trim suffix=" " suffixOverrides=",">
    	<if test="clusterName !=null and clusterName !=''">
    		clusterName = #{clusterName} ,
    	</if>
    	<if test="version !=null and version !='' and version >0">
    		version = #{version} ,
    	</if>
    	
    	<if test="migration !=null and migration !='' ">
    		migration = #{migration} ,
    	</if>
    	
    	<if test="config !=null and config !='' ">
    		config = #{config} ,
    	</if>
    	 
    	</trim>
    	where id = #{id}
    </update>
	
</mapper>

